"use client";

import { useEffect, useRef } from "react";
import { gsap } from "gsap";
import { ScrollTrigger } from "gsap/ScrollTrigger";

gsap.registerPlugin(ScrollTrigger);

const ContactSubC = () => {
  const pathRef = useRef(null);

  useEffect(() => {
    const path = pathRef.current;
    const length = path.getTotalLength();

    gsap.set(path, {
      strokeDasharray: length,
      strokeDashoffset: length,
    });

    gsap.fromTo(
      path,
      { strokeDashoffset: length },
      {
        strokeDashoffset: 0,
        duration: 2.8,
        ease: "power1.inOut",
        scrollTrigger: {
          trigger: path,
          start: "top 80%", // animate when path enters 80% of viewport height
          toggleActions: "play none none reverse",
          // scrub: true, // if you want scroll-progress-based drawing
          // markers: true, // uncomment for debugging
        },
      }
    );
  }, []);

  return (
      <svg width="109" height="39" viewBox="0 0 109 39" fill="none" xmlns="http://www.w3.org/2000/svg">
<path ref={pathRef} d="M43.3652 32.6868C43.9871 32.5151 44.6023 32.2375 45.2278 32.1878C50.7572 31.7735 56.3035 31.5749 61.8159 30.9611C66.1341 30.4792 70.4251 29.5821 74.7095 28.7217C79.6259 27.7342 84.5724 26.8567 89.4083 25.4379C93.8186 24.1418 98.2787 22.813 102.291 20.0114C102.786 19.6647 103.275 19.3059 103.75 18.9227C106.336 16.8271 105.684 14.2514 103.791 12.3286C101.349 9.84893 98.3401 8.83939 95.3145 7.95604C89.5627 6.27443 83.7156 5.41108 77.8256 4.88563C67.8127 3.99522 57.8041 3.89038 47.7766 4.53044C39.0133 5.08742 30.3409 6.43394 21.7426 8.49267C17.2689 9.565 12.8354 10.9263 8.73621 13.4431C7.37646 14.2793 6.10698 15.4451 4.97404 16.7003C3.57199 18.257 3.67443 20.2473 4.97765 21.9632C7.15414 24.83 10.0308 26.2956 12.8643 27.806C18.1384 30.6157 23.6542 32.5337 29.2725 33.9591C32.4911 34.773 35.7624 35.2653 39.0041 35.9285C39.7929 36.0903 40.5684 36.3457 41.4105 36.5766C37.54 38.3686 33.7386 37.1322 29.9745 36.3963C24.6695 35.3572 19.4734 33.7197 14.4826 31.2311C10.7036 29.3475 6.99433 27.2765 3.90553 23.9225C0.923353 20.6823 1.69973 16.4889 4.38807 13.8925C8.30592 10.106 13.0351 8.46752 17.8347 7.18717C20.4224 6.49586 23.0134 5.81677 25.6213 5.25569C28.2225 4.69869 30.8405 4.26785 33.4585 3.85736C34.0972 3.75476 34.7662 3.94111 35.1289 3.96913C35.9305 3.76048 36.4893 3.61728 37.0448 3.46595C37.8896 3.24096 38.8412 3.26006 39.6065 3.24684C40.7377 3.225 41.8842 2.1774 43.1299 3.12822C43.5995 3.4858 44.5171 2.91066 45.2357 2.83645C47.0721 2.64272 48.9118 2.47748 50.7516 2.32445C52.7245 2.1631 54.7006 1.95291 56.6769 1.9096C57.8647 1.88361 59.053 2.21581 60.2442 2.25088C61.1393 2.27819 62.0373 2.00022 62.9323 2.01532C64.393 2.03782 65.8506 2.23534 67.3113 2.26598C68.243 2.2851 69.2472 1.82383 70.096 2.1117C72.323 2.86178 74.565 2.43551 76.7912 2.6076C79.5098 2.81567 82.2319 3.10515 84.9342 3.53711C90.9878 4.50194 97.0745 5.39346 102.672 8.68307C103.754 9.32069 104.803 10.2026 105.653 11.2353C108.373 14.5491 107.796 18.9784 104.502 21.3883C100.074 24.626 95.2257 26.4519 90.2298 27.6755C83.8202 29.247 77.3637 30.5417 70.9407 32.0399C64.9269 33.444 58.8622 34.1236 52.7499 34.0828C49.9284 34.0621 47.1096 33.6669 44.2878 33.4142C43.985 33.3861 43.6952 33.1789 43.3989 33.0531C43.3888 32.931 43.3786 32.8089 43.3685 32.6868L43.3652 32.6868Z" stroke="#FFD25D" stroke-width="3"/>
</svg>
  );
};

export default ContactSubC;